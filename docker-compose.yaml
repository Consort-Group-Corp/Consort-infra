services:
  db:
    image: postgres:15
    container_name: consort-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - consort-network

    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.7.0
    container_name: consort-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=${KAFKA_CLUSTER_ID}
      - KAFKA_CFG_NODE_ID=1
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - consort-network

    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis-user-service:
    image: redis:7.2
    container_name: consort-redis-user-service
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    ports:
      - "6381:6379"
    volumes:
      - redis_user_data:/data
    networks:
      - consort-network

  redis-logging-service:
    image: redis:7.2
    container_name: consort-redis-logging-service
    restart: unless-stopped
    command: redis-server --save 300 10 --loglevel warning
    ports:
      - "6382:6379"
    volumes:
      - redis_logging_data:/data
    networks:
      - consort-network

  redis-notification-service:
    image: redis:7.2
    container_name: consort-redis-notification-service
    restart: unless-stopped
    command: redis-server --save 300 10 --loglevel warning
    ports:
      - "6383:6379"
    volumes:
      - redis_notification_data:/data
    networks:
      - consort-network

  redis-course-service:
    image: redis:7.2
    container_name: consort-redis-course-service
    restart: unless-stopped
    command: redis-server --save 300 10 --loglevel warning
    ports:
      - "6384:6379"
    volumes:
      - redis_course_data:/data
    networks:
      - consort-network


networks:
  consort-network:

volumes:
  postgres_data:
  redis_user_data:
  redis_logging_data:
  redis_notification_data:
  redis_course_data:
  kafka_data: